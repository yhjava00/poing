<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main">
	
	<select id="category" resultType="categoryVO">
		select * from category
	</select>
	
	<select id="selectRecommendList" resultType="storeVO">
		<![CDATA[
			select * 
			from (select rownum , s.* from store s order by countAllReview desc) 
			where rownum <= 10
		]]>
	</select>
	
	<select id="selectLotOfLikesList" resultType="storeVO">
		<![CDATA[
			select *
			from (select rownum, s.* from store s order by store_like desc)
			where rownum <= 10
		]]>
	</select>
	
	<select id="totSearchNO" parameterType="String" resultType="int">
		select count(idx) from store where store_name like '%' || #{search} || '%' or category like '%' || #{search} || '%'
	</select>
	
	<select id="totReviewNO" parameterType="int" resultType="int">
		select count(idx) from review where store_idx = #{storeIdx}
	</select>
	
	<select id="totPastRes" parameterType="map" resultType="int">
		<![CDATA[
			select count(idx) from reservation where member_id = #{id} and resDate < #{today}
		]]>
	</select>
	
	<select id="totComingVisit" parameterType="map" resultType="int">
		<![CDATA[
			select count(idx) from reservation where member_id = #{id} and resDate >= #{today}
		]]>
	</select>

	<select id="totMyReview" parameterType="String" resultType="int">
		<![CDATA[
			select count(idx) from review where member_id = #{id}
		]]>
	</select>
	
	<select id="totLikeStore" parameterType="String" resultType="int">
		select count(idx) from like_store where member_id = #{id}
	</select>
	
	<select id="selectSearchList" parameterType="map" resultType="storeVO">
		select * 
		from (select rownum rn, A.* 
				from (select s.* 
						from store s 
						where s.store_name like '%' || #{search} || '%' or s.category like '%' || #{search} || '%' 
						order by s.idx desc) A)
		where rn between (#{page}-1) * 12 + 1 and #{page} * 12 
	</select>
	
	<select id="selectStoreAll" parameterType="map" resultType="storeAllVO">
		select s.*, i.*, nvl(A.store_idx, 0) likeStore
		from store s inner join store_info i on s.idx = i.store_idx 
		left join (select store_idx from like_store where member_id = #{id}) A on A.store_idx = s.idx
		where s.idx = #{storeIdx}
	</select>
	
	<select id="selectStore" parameterType="int" resultType="storeVO">
		select * from store where idx = #{storeIdx}
	</select>
	
	<select id="selectstoreImgList" parameterType="int" resultType="String">
		select img_name from store_img where store_idx = #{idx}
	</select>
	
	<select id="unreservedTimeList" parameterType="map" resultType="String">
		<![CDATA[
			select DISTINCT(time)
			from reservation r inner join store_info i 
			on r.store_idx = i.store_idx 
			where resdate = #{date} 
			and  i.max_num_people < (select sum(people_num)
									 from reservation 
									 where store_idx = #{idx} 
									 and time = r.time) + #{peopleNum}
		]]>
	</select>
	
	<insert id="insertReservation" parameterType="reservationVO">
		insert into reservation (idx, store_idx, member_id, resDate, time, people_num)
		values (reservation_seq.nextVal, #{store_idx}, #{member_id}, #{resDate}, #{time}, #{people_num})
	</insert>
	
	<insert id="insertReview" parameterType="reviewVO">
		insert into review (idx, store_idx, member_id, content, star, regdate)
		values (review_seq.nextVal, #{store_idx}, #{member_id}, #{content}, #{star}, sysdate)
	</insert>
	
	<update id="updateStoreStar" parameterType="map">
		update store set countAllReview = countAllreview + 1, star = star + #{star} where idx = #{storeIdx}
	</update>
	
	<select id="canIWriteReview" parameterType="map" resultType="int">
		<![CDATA[
			select resTable.cnt - reviewTable.cnt 
			from (select count(*) cnt from reservation where store_idx = #{idx} and member_id = #{id} and (resdate < #{today} or (resdate = #{today} and time <= #{time}))) resTable, 
			(select count(*) cnt from review where  store_idx = #{idx} and member_id = #{id}) reviewTable
		]]>
	</select>
	
	<select id="selectOnlyThreeReviewList" parameterType="int" resultType="reviewVO">
		<![CDATA[
			select rownum, a.* 
			from (select r.*, m.nickname, m.profile_img
					from review r inner join member m on r.member_id = m.id  
					where store_idx = #{storeIdx} order by idx desc) a
			where rownum <= 3
		]]>
	</select>
	
	<select id="selectReviewList" parameterType="map" resultType="reviewVO">
		<![CDATA[
			select * 
			from (select rownum rn, A.* 
					from (select r.*, m.nickname, m.profile_img 
							from review r inner join member m on r.member_id = m.id  
							where store_idx = #{storeIdx} order by idx desc) A)
			where rn between (#{page}-1) * 30 + 1 and #{page} * 30 
		]]>
	</select>
	
	<select id="pastResList" parameterType="map" resultType="reservationVO">
		<![CDATA[
			select * 
			from (select rownum rn, A.* 
			        from (select r.*, s.store_name, s.introduce, s.location1, s.location2, s.main_img
			                from reservation r inner join store s on r.store_idx = s.idx  
			                where r.member_id = #{id} and r.resdate < #{today} order by r.resDate desc) A)
			where rn between (#{page}-1) * 10 + 1 and #{page} * 10
		]]>
	</select>

	<select id="comingVisitList" parameterType="map" resultType="reservationVO">
		<![CDATA[
			select * 
			from (select rownum rn, A.* 
			        from (select r.*, s.store_name, s.introduce, s.location1, s.location2, s.main_img
			                from reservation r inner join store s on r.store_idx = s.idx  
			                where r.member_id = #{id} and r.resdate >= #{today} order by r.resDate) A)
			where rn between (#{page}-1) * 10 + 1 and #{page} * 10
		]]>
	</select>
	
	<select id="myReviewList" parameterType="map" resultType="reviewVO">
		<![CDATA[
			select * 
			from (select rownum rn, A.* 
					from (select r.*, m.nickname, m.profile_img 
							from review r inner join member m on r.member_id = m.id  
							where r.member_id = #{id} order by idx desc) A)
			where rn between (#{page}-1) * 10 + 1 and #{page} * 10 
		]]>
	</select>
	
	<select id="likeStoreList" parameterType="map" resultType="storeVO">
		<![CDATA[
			select * 
			from (select rownum rn, A.* 
			        from (select *
			                from store
			                where idx in (select store_idx from like_store where member_id = #{id})) A)
			where rn between (#{page}-1) * 10 + 1 and #{page} * 10
		]]> 
	</select>
	
	<insert id="iLikeThis" parameterType="map">
		insert into like_store values(like_store_seq.nextVal, #{id}, #{idx})
	</insert>
	
	<delete id="iLikedThis" parameterType="map">
		delete from like_store where member_id = #{id} and store_idx = #{idx}
	</delete>
	
	<delete id="deleteReservation" parameterType="map">
		delete from reservation where member_id = #{id} and store_idx = #{store_idx} and resDate = #{resDate} and time = #{time}
	</delete>
	
</mapper>